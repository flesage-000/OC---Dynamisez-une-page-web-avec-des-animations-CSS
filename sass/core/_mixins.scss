@charset 'utf-8';

/**
 * To display a content of a block with flexbox
 *
 * @param {string} $dir
 *  The direction of flex
 * @param {string} $wrap
 *  The flex content is allowed to wrap (or not)
 * @param {string} $alignI
 *  To align items
 * @param {string} $justC
 *  To justify content
 * @param {string} $gap
 *  To set flex gap
 */
@mixin flex($dir: false, $wrap: false, $alignI: false, $justC: false, $gap: false) {
  display: flex;

  @if $dir    { flex-direction: $dir; }
  @if $wrap   { flex-wrap: $wrap;  }
  @if $alignI { align-items: $alignI; }
  @if $justC  { justify-content: $justC; }
  @if $gap    { gap: $gap; }
}

/**
 * Absolute positionning
 *
 * @param {string} $top
 * To set top position
 * @param {string} $right
 * To set right position
 * @param {string} $bottom
 * To set bottom position
 * @param {string} $left
 * To set left position
 */
@mixin posAbs($top: false, $right: false, $bottom: false, $left: false) {
  position: absolute;

  @if $top    { top: $top;  }
  @if $right  { right: $right;  }
  @if $bottom { bottom: $bottom;  }
  @if $left   { left: $left;  }
}

/**
 * To center vertically AND horizontally
 */
@mixin centering-vh--before {
  position: relative;

  &:before {
    display: block;
    @include posAbs($top: 50%, $left: 50%);
    transform: translateX(-50%) translateY(-50%);
  }
}

/**
 * To ellipsis sentences
 */
@mixin ellipse {
  flex: 1;
  min-width: 0;

  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**
 * To set linear background gradient
 */
@mixin bkg-linGrad($startClr, $endClr) {
  background: $startClr;
  background: -webkit-linear-gradient(top left, $startClr, $endClr);
  background: -moz-linear-gradient(top left, $startClr, $endClr);
  background: linear-gradient(to bottom right, $startClr, $endClr);
}